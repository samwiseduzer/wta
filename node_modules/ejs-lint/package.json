{
  "_args": [
    [
      {
        "raw": "ejs-lint@^0.3.0",
        "scope": null,
        "escapedName": "ejs-lint",
        "name": "ejs-lint",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "/Users/samuelduzett/Documents/Dev/wta-node-exercises"
    ]
  ],
  "_from": "ejs-lint@>=0.3.0 <0.4.0",
  "_id": "ejs-lint@0.3.0",
  "_inCache": true,
  "_location": "/ejs-lint",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ejs-lint-0.3.0.tgz_1491593248883_0.014724261593073606"
  },
  "_npmUser": {
    "name": "ryanzim",
    "email": "opensrc@ryanzim.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ejs-lint@^0.3.0",
    "scope": null,
    "escapedName": "ejs-lint",
    "name": "ejs-lint",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ejs-lint/-/ejs-lint-0.3.0.tgz",
  "_shasum": "7a8bd5f415f8822d9219b04043b5efc7b593d595",
  "_shrinkwrap": null,
  "_spec": "ejs-lint@^0.3.0",
  "_where": "/Users/samuelduzett/Documents/Dev/wta-node-exercises",
  "author": {
    "name": "Ryan Zimmerman",
    "email": "opensrc@ryanzim.com",
    "url": "http://ryanzim.com/"
  },
  "bin": {
    "ejslint": "./cli.js"
  },
  "bugs": {
    "url": "https://github.com/RyanZim/EJS-Lint/issues"
  },
  "dependencies": {
    "ejs": "2.5.6",
    "ejs-include-regex": "^1.0.0",
    "globby": "^6.1.0",
    "read-input": "^0.3.1",
    "rewire": "^2.5.1",
    "syntax-error": "^1.1.6",
    "yargs": "^7.0.1"
  },
  "description": "Linter/Syntax Checker for EJS Templates",
  "devDependencies": {
    "eslint": "^3.19.0",
    "eslint-config-ryanzim": "0.0.2",
    "istanbul": "^0.4.3",
    "mocha": "^3.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "7a8bd5f415f8822d9219b04043b5efc7b593d595",
    "tarball": "https://registry.npmjs.org/ejs-lint/-/ejs-lint-0.3.0.tgz"
  },
  "gitHead": "ec25d694500c126f9b086f04a70c728f1a759426",
  "homepage": "https://github.com/RyanZim/EJS-Lint",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ryanzim",
      "email": "opensrc@ryanzim.com"
    }
  ],
  "name": "ejs-lint",
  "optionalDependencies": {},
  "readme": "# EJS-Lint\n\nLinter/Syntax Checker for EJS Templates.\n\nThis was born out of [mde/ejs #119](https://github.com/mde/ejs/issues/119) and the frustration of the unhelpful errors thrown if you make a simple syntax error inside a scriptlet tag.\n\n**During this pre-v1.0.0 stage, we promise not to break backwards-compatibility in a PATCH version bump.**\n\n## Features\n\nEJS-Lint parses scriptlet tags (`<%`, `%>`, `<%_`, `_%>`, and `-%>`). It ignores all other tags (i.e. `<%=`).\n\n**Note:** This linter does not attempt to check for unclosed EJS tags, so if you get an error `Unexpected token` with a line number that doesn't contain any scriptlets, you most likely forgot to close a tag earlier.\n\nIt also is set up to handle old-style `include`s (`<% include filename %>`) by ignoring them. It does not lint included files regardless of the method of inclusion.\n\nIt can work with custom delimiters, just pass it in the options (if using the API) or pass the `--delimiter` (`-d`) flag on the CLI.\n\n## Installation\n\n```bash\nnpm install ejs-lint\n```\n\n## How it Works\n\nEJS-Lint replaces everything outside a scriptlet tag with whitespace (to retain line & column numbers) and then runs the resulting (hopefully) valid JS through [node-syntax-error](https://github.com/substack/node-syntax-error) to check for errors.\n\nWe use [rewire](https://github.com/jhnns/rewire) to load [EJS](https://github.com/mde/ejs). This allows us to access `Template.parseTemplateText()`, an internal function that parses the string and splits it into an array.\n\n**Why can't EJS do this?** At EJS, we try to keep the library lightweight. EJS-Lint uses [acorn](https://github.com/ternjs/acorn) which is too large a dependency for EJS.\n\n## CLI\n\n```\nUsage:\n ejslint <file> [-d=?]\n\n  If no file is specified, reads from stdin\n\nOptions:\n  -d, --delimiter  Specify a custom delimiter ( i.e. <? instead of <% ) [string]\n  --help           Show help                                           [boolean]\n```\n\n## API\n\nRequire:\n```js\nconst ejsLint = require('ejs-lint');\n```\nThen do `ejsLint(text, options)`; where `text` is the EJS template and `options` are the EJS options. This returns a [node-syntax-error object](https://github.com/substack/node-syntax-error#attributes) that you can parse.\n\n`ejsLint.lint()` is an alias for backwards-compatibility; it will be removed in a future release.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ryanzim/ejs-lint.git"
  },
  "scripts": {
    "cover": "istanbul cover node_modules/mocha/bin/_mocha",
    "test": "mocha && eslint .",
    "try": "./cli.js try.ejs"
  },
  "version": "0.3.0"
}
